name: Geode

on: [push, pull_request]

env:
  # Your Geode Mod Id
  GEODE_MOD_ID: gay.rooot.gdmp
  GEODE_SDK_VERSION: v1.0.0-beta.18
  GEODE_CLI_VERSION: v2.4.0

jobs:
  build:
    strategy:
      matrix:
        #         os: [macos-latest, windows-latest]
        os: [macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      # TODO: Support for Windows and Linux
      - name: Geode CLI
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            mkdir -p /Users/Shared/Geode
            cd /Users/Shared/Geode

            mkdir cli
            git clone https://github.com/geode-sdk/cli --branch $GEODE_CLI_VERSION --recursive cli-temp
            cd cli-temp
            export OPENSSL_STATIC=1
            cargo build --release
            cd ../
            cp cli-temp/target/Release/geode cli/geode
            chmod +x cli/geode
            rm -rf cli-temp
            echo "PATH=$PATH:/Users/Shared/Geode/cli" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "$RUNNER_OS not supported"
            exit 1
          elif [ "$RUNNER_OS" == "Linux" ]; then
            echo "$RUNNER_OS not supported"
            exit 1
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi

      # TODO: Support for Windows and Linux
      - name: Geode SDK
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
           mkdir -p /Users/Shared/Geode
           cd /Users/Shared/Geode
             
           git clone https://github.com/geode-sdk/geode --branch $GEODE_SDK_VERSION --recursive sdk
           cd sdk

           cmake -B build -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Release -DGEODE_DEBUG=Off -DCMAKE_OSX_DEPLOYMENT_TARGET=10.13 -DCLI_PATH="/Users/Shared/Geode/cli"  -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
           cmake --build . --config Release --parallel

           mv ./bin/nightly/Geode.dylib ./bin/nightly/GeodeBootstrapper.dylib ./loader/include/link/libfmod.dylib ./bin/$GEODE_SDK_VERSION
           rm -rf ./bin/nightly

           echo "GEODE_SDK=/Users/Shared/Geode/sdk" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "Windows" ]; then
           echo "$RUNNER_OS not supported"
           exit 1
          elif [ "$RUNNER_OS" == "Linux" ]; then
           echo "$RUNNER_OS not supported"
           exit 1
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build . --config Release

      - name: Zipping
        run: cmake --build . --config Release

      - uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.os}}
          path: build/${{env.GEODE_MOD_ID}}.geode
